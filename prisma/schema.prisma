// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  clerkId     String   @unique
  username    String?  @unique
  name        String?
  email       String   @unique
  avatar      String?
  currentWeight Float?
  goalWeight  Float?
  height      Float?
  age         Int?
  gender      String?
  activityLevel String?
  goalType    String?
  weeklyGoal  Float?
  dailyCalorieGoal Int?
  macroGoals  Json?
  waterGoal   Float?
  waterGoalUnit String? @default("oz")
  isPremium   Boolean  @default(false)
  units       String   @default("imperial")
  timezone    String   @default("America/New_York")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  foods       Food[]
  meals       Meal[]
  workouts    Workout[]
  goals       Goal[]
  mealEntries MealEntry[]
}

model Food {
  id          String   @id @default(cuid())
  name        String
  calories    Float
  protein     Float
  carbs       Float
  fat         Float
  fiber       Float?
  sugar       Float?
  sodium      Float?
  servingSize String
  servingUnit String
  isPublic    Boolean  @default(true)
  createdBy   String
  category    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Meal {
  id          String   @id @default(cuid())
  name        String
  foods       Json     // Array of { foodId: string, servings: number }
  totalCalories Float
  totalProtein Float
  totalCarbs  Float
  totalFat    Float
  isPublic    Boolean  @default(true)
  createdBy   String
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model MealEntry {
  id          String   @id @default(cuid())
  date        String
  mealType    String
  foodId      String?
  mealId      String?
  servings    Float
  calories    Float
  protein     Float
  carbs       Float
  fat         Float
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Workout {
  id          String   @id @default(cuid())
  name        String
  type        String
  duration    Int      // minutes
  caloriesBurned Float
  date        String
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Goal {
  id          String   @id @default(cuid())
  type        String
  name        String
  target      Float
  current     Float
  unit        String
  deadline    String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
